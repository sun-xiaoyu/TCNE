141492

chunk No (195,141492)
At 2352 s, a chunk is stored into a list
At 2360 s, tags removed from each line of HTML
At 2365 s, text cleaned line by line
At 2365 s, clean text joined together
151065

chunk No (196,151065)
At 2365 s, a chunk is stored into a list
At 2374 s, tags removed from each line of HTML
At 2378 s, text cleaned line by line
At 2378 s, clean text joined together
141601

chunk No (197,141601)
At 2378 s, a chunk is stored into a list
Process PoolWorker-1:

nx.info(G)
nodesLowerThan5 = [x for x,y in G.nodes(data=True) if y['count']<5]
=================================================================================
2019.1.11 Fri
Found out that graph haven't been reduced.
For 10 chunk:
110Mb-->94MB
writing time: 95s using 1 core

Estimation for 6936 chunks
63.7GB
Graph building time: 13.6 hours (using 1 core)(assuming linear)
4.4h per
writing time: 18.3 hours using 1 core (assuming linear)
==============================output===========================
Name: 
Type: Graph
Number of nodes: 226171
Number of edges: 6206065
Average degree:  54.8794
['thirdmill', 'vang', 'nunnery', 'woodi', 'gavar', 'sowell', 'utnapishtim', 'woods', 'koncertsal']
[('biennials', 'years'), ('biennials', 'cold'), ('biennials', 'grown'), ('biennials', 'flower'), ('biennials', 'rosette'), ('biennials', 'parsley'), ('biennials', 'only'), ('biennials', 'location'), ('biennials', 'several')]
At 77 s, Graph built
At 172 s, Graph saved in weighted edgelist. All Done
==============================output===========================
30 chunk===>75% memory = 14.6GB
50 chunks ===>90% =17.7
2018/12/15 remove url and rubbish like {{dfsdfs=dfs| or |fsd=rgw|, remove special symbols of html in the markdown like: &lt; &quot; ...

及时功能？找出最慢的部分 然后并行


At 2909 s, 50 chunk dealt.
Name: 
Type: Graph
Number of nodes: 602526
Number of edges: 22483501
Average degree:  74.6308
==============================output===========================
54 chunks 18.1
print nx.info(G)
Name: 
Type: Graph
Number of nodes: 626963
Number of edges: 23748113
Average degree:  75.7560
nodesLowerThan5 = [x for x,y in G.nodes(data=True) if y['count'] < 5]
len(nodesLowerThan5)
464944
G.remove_nodes_from(nodesLowerThan5)
print nx.info(G)
Name: i=54
Type: Graph
Number of nodes: 162019
Number of edges: 21330144
Average degree: 263.3042
Memory used:15.6GB(79%)-->4.2GB (21.5%)
===================11.4GB for 54 chunk(linear? need to be verified)
4.3 GB -->8.3 (17 chunks)




